(define (boolCalc tree)
    (display tree)
    (splitFunct tree 'V)
    (display 'hello2))

  (define (splitFunct enteredList sym)
    (display enteredList)
    (foldr (lambda (element rest) 
             (if (eqv? element sym)
                 (cons null rest) 
                 (cons (cons element (car rest))(cdr rest))))  
           (list '()) enteredList)
    (display enteredList))
> (boolCalc '(#f V #f V #t))